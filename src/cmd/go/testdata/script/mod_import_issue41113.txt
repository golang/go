# Regression test for https://golang.org/issue/41113.
#
# When resolving a missing import path, the inability to add the package from
# one module path should not interfere with adding a nested path.

# Initially, our module depends on split-incompatible v2.1.0-pre+incompatible,
# from which an imported package has been removed (and relocated to the nested
# split-incompatible/subpkg module). modload.QueryPattern will suggest
# split-incompatible v2.0.0+incompatible, which we cannot use (because it would
# be an implicit downgrade), and split-incompatible/subpkg v0.1.0, which we
# *should* use.

go mod tidy

go list -m all
stdout '^example.com/split-incompatible/subpkg v0\.1\.0$'
! stdout '^example.com/split-incompatible .*'

-- go.mod --
module golang.org/issue/41113

go 1.16

require example.com/split-incompatible v2.1.0-pre+incompatible
-- x.go --
package issue41113

import _ "example.com/split-incompatible/subpkg"
