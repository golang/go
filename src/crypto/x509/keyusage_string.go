// Code generated by "stringer -type=KeyUsage -trimprefix KeyUsage"; DO NOT EDIT.

package x509

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KeyUsageDigitalSignature-1]
	_ = x[KeyUsageContentCommitment-2]
	_ = x[KeyUsageKeyEncipherment-4]
	_ = x[KeyUsageDataEncipherment-8]
	_ = x[KeyUsageKeyAgreement-16]
	_ = x[KeyUsageCertSign-32]
	_ = x[KeyUsageCRLSign-64]
	_ = x[KeyUsageEncipherOnly-128]
	_ = x[KeyUsageDecipherOnly-256]
}

const (
	_KeyUsage_name_0 = "DigitalSignatureContentCommitment"
	_KeyUsage_name_1 = "KeyEncipherment"
	_KeyUsage_name_2 = "DataEncipherment"
	_KeyUsage_name_3 = "KeyAgreement"
	_KeyUsage_name_4 = "CertSign"
	_KeyUsage_name_5 = "CRLSign"
	_KeyUsage_name_6 = "EncipherOnly"
	_KeyUsage_name_7 = "DecipherOnly"
)

var (
	_KeyUsage_index_0 = [...]uint8{0, 16, 33}
)

func (i KeyUsage) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _KeyUsage_name_0[_KeyUsage_index_0[i]:_KeyUsage_index_0[i+1]]
	case i == 4:
		return _KeyUsage_name_1
	case i == 8:
		return _KeyUsage_name_2
	case i == 16:
		return _KeyUsage_name_3
	case i == 32:
		return _KeyUsage_name_4
	case i == 64:
		return _KeyUsage_name_5
	case i == 128:
		return _KeyUsage_name_6
	case i == 256:
		return _KeyUsage_name_7
	default:
		return "KeyUsage(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
